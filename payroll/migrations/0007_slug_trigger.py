# Generated by Django 2.0.2 on 2018-04-04 21:11

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('payroll', '0006_unique_index'),
    ]

    operations = [
        migrations.RunSQL('''
            CREATE FUNCTION slugify(str text) RETURNS text AS $$
                BEGIN
                    RETURN regexp_replace(
                       lower(translate(str,
                         'äëïöüáéíóúâêîûôåãõàèìòùřšěčůńýśćłęążźĄŃÝŚĆŁĘÄËÏÖÜÁÉÍÓÚÂÊÎÛÔÅÃÕÀÈÌÒÙŘŠĚČŮŻŹß ²ø®',
                         'aeiouaeiouaeiouaaoaeioursecunyscleazzANYSCLEAEIOUAEIOUAEIOUAAOAEIOURSECUZzs-2dR'
                         -- missing chars will be removed
                       )),
                       -- strip all others chars than [^a-z0-9 \-]
                       '[^a-z0-9 \-]',
                       '',
                       'g'
                    ) || '-' || left(gen_random_uuid()::varchar, 8);
                END
            $$ LANGUAGE plpgsql
        ''', reverse_sql='DROP FUNCTION slugify CASCADE'),
        migrations.RunSQL('''
            CREATE FUNCTION person_slug_trigger() RETURNS trigger AS '
                BEGIN
                  NEW.slug := slugify(CONCAT_WS('' '', TRIM(NEW.first_name), TRIM(NEW.last_name)));
                  RETURN NEW;
                END' LANGUAGE 'plpgsql'
        ''', reverse_sql='DROP FUNCTION person_slug_trigger CASCADE'),
        migrations.RunSQL('''
            CREATE FUNCTION employer_slug_trigger() RETURNS trigger AS '
                DECLARE
                  parent_name text;
                BEGIN
                  IF (NEW.parent_id IS NOT NULL) THEN
                    parent_name = (SELECT name FROM payroll_employer WHERE id = NEW.parent_id);
                  ELSE
                    parent_name = NULL;
                  END IF;

                  IF (parent_name IS NULL) THEN
                    NEW.slug := slugify(TRIM(NEW.name));
                  ELSIF (NEW.name ILIKE parent_name || ''%'') THEN
                    NEW.slug := slugify(TRIM(NEW.name));
                  ELSE
                    NEW.slug := slugify(CONCAT_WS('' '', TRIM(parent_name), TRIM(NEW.name)));
                  END IF;

                  RETURN NEW;
                END' LANGUAGE 'plpgsql'
        ''', reverse_sql='DROP FUNCTION employer_slug_trigger CASCADE'),
        migrations.RunSQL('''
            CREATE TRIGGER person_slug BEFORE INSERT OR UPDATE
            ON payroll_person FOR EACH ROW EXECUTE PROCEDURE
            person_slug_trigger()
        ''', reverse_sql='DROP TRIGGER person_slug ON payroll_person'),
        migrations.RunSQL('''
            CREATE TRIGGER employer_slug BEFORE INSERT OR UPDATE
            ON payroll_employer FOR EACH ROW EXECUTE PROCEDURE
            employer_slug_trigger()
        ''', reverse_sql='DROP TRIGGER employer_slug ON payroll_employer'),
    ]
